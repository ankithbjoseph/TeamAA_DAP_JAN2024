version: '3'
services:
  main:
    container_name: main
    build: .
    ports:
      - "3000:3000"
      - "8050:80"
    depends_on:
      - mongodb
      - postgres
      - cassandra-db

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: dap@dap.com
      PGADMIN_DEFAULT_PASSWORD: dap
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "5050:80"
    entrypoint: /entrypoint.sh;"
    user: root
    restart: unless-stopped

  mongodb:
    image: "mongo"
    container_name: mongodb_database
    environment:
      MONGO_INITDB_ROOT_USERNAME: dap
      MONGO_INITDB_ROOT_PASSWORD: dap
      MONGO_INITDB_DATABASE: DAPPROJECT
    ports:
      - 27017-27019:27017-27019
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    restart: unless-stopped

  postgres:
    image: "postgres" # use the latest postgresql version
    container_name: postgres_database
    ports:
      - "5432:5432"
    env_file:
      - postgresql.env # postgresql configuration data
    volumes:
      - dbdata:/var/lib/postgresql/data/
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  cassandra-db:
    image: "cassandra"
    container_name: cassandra_database
    ports:
      - "9042:9042"
    environment:
      - "MAX_HEAP_SIZE=384M"
      - "HEAP_NEWSIZE=128M"

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: dap
      ME_CONFIG_MONGODB_ADMINPASSWORD: dap
      ME_CONFIG_MONGODB_SERVER: mongodb
    depends_on:
      - "mongodb"

  superset:
    build:
      context: .
      dockerfile: ./superset/Dockerfile
      args:
        POSTGRES_USER: $POSTGRES_USER
        POSTGRES_PASSWORD: $POSTGRES_PASSWORD
        SUPERSET_ADMIN: $SUPERSET_ADMIN
        SUPERSET_PASSWORD: $SUPERSET_PASSWORD
        SUPERSET_SECRET_KEY: ${SUPERSET_SECRET_KEY}
    environment:
      SUPERSET_SECRET_KEY: ${SUPERSET_SECRET_KEY}
    ports:
      - "8088:8088"
    command: gunicorn --bind  "0.0.0.0:8088" --access-logfile '-' --error-logfile '-' --workers 1 --worker-class gthread --threads 20 --timeout 60 --limit-request-line 0 --limit-request-field_size 0 "superset.app:create_app()"
    depends_on:
      - main

volumes:
  dbdata:
